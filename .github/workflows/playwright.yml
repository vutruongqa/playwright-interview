# .github/workflows/playwright.yml
# This workflow runs Playwright tests on GitHub Actions.

name: Playwright Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events to the main branch
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
    - name: Checkout repository
      uses: actions/checkout@v4

    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Specify the Node.js version to use

    # Install npm dependencies
    - name: Install dependencies
      run: npm install

    # Install Playwright browsers
    # This step is crucial as Playwright tests require browser binaries to run.
    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    # Run Playwright tests
    # The 'npm test' script is defined in your package.json
    - name: Run Playwright tests
      run: npm test

    # Upload test results (e.g., HTML report, screenshots, videos)
    # This step is optional but highly recommended for debugging failed tests.
    - name: Upload Playwright test results
      uses: actions/upload-artifact@v4
      if: always() # Always run this step, even if tests fail
      with:
        name: playwright-report
        path: test-results/ # This path should match the outputDir in playwright.config.ts
        retention-days: 5 # How long to retain the artifact (optional)